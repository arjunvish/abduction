;Example from abduction paper using push-pop
(set-option :produce-abducts true)
(set-option :incremental true)
(set-option :global-declarations true)
(set-logic QF_LIA)
(push 1)
(declare-fun x () Int)
(declare-fun y () Int)
(declare-fun z () Int)
;(define-fun x!0 () Bool (>= y 0))
;(assert x!0)
(assert (>= y 0))
(get-abduct A (>= (+ x y z) 0))
(get-abduct-next)
(get-abduct-next)
(get-abduct-next)
(get-abduct-next)
(pop 1)

;(set-option :produce-models true)
;(set-option :global-declarations true)
;(set-option :produce-unsat-cores true)
;(set-option :produce-abducts true)
;(set-logic ALL)

;(push 1)
;	(declare-fun y () Int)
;	(define-fun x!0 () Bool (<= 0 y))
;	(declare-fun x () Int)
;	(declare-fun z () Int)
;	
;	(define-fun x!1 () Int (+ z y x))
;	(define-fun x!2 () Bool (<= 0 x!1))
;	
;	(assert x!0)
;	(get-abduct abd x!2)
;	(get-abduct-next)
;	(get-abduct-next)
;	(get-abduct-next)
;	(get-abduct-next)
;	;(get-abduct abd (<= 0 (+ z y x)))
;(pop 1)
